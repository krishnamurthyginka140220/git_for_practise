{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"AzureBlobStorage1": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Age",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Age",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Salary",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Salary",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {
									"cn": {
										"value": "@pipeline().parameters.cn_p",
										"type": "Expression"
									},
									"dn": {
										"value": "@pipeline().parameters.dir_p",
										"type": "Expression"
									},
									"fn": {
										"value": "@pipeline().parameters.fn_p",
										"type": "Expression"
									},
									"storageaccnam": {
										"value": "@pipeline().parameters.sa_p",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {
									"cn": {
										"value": "@pipeline().parameters.cn_p",
										"type": "Expression"
									},
									"dn": {
										"value": "@pipeline().parameters.des_dirn_p",
										"type": "Expression"
									},
									"fn": {
										"value": "@pipeline().parameters.dfn_p",
										"type": "Expression"
									},
									"storageaccnam": {
										"value": "@pipeline().parameters.sa_p",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"cn_p": {
						"type": "string",
						"defaultValue": "sasource"
					},
					"sa_p": {
						"type": "string",
						"defaultValue": "sakittu"
					},
					"dir_p": {
						"type": "string",
						"defaultValue": "csv"
					},
					"fn_p": {
						"type": "string",
						"defaultValue": "file_1.csv"
					},
					"des_dirn_p": {
						"type": "string",
						"defaultValue": "des"
					},
					"dfn_p": {
						"type": "string",
						"defaultValue": "filx.csv"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureBlobStorage1')]",
					"type": "LinkedServiceReference",
					"parameters": {
						"san": {
							"value": "@dataset().storageaccnam",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"cn": {
						"type": "string"
					},
					"dn": {
						"type": "string"
					},
					"fn": {
						"type": "string"
					},
					"storageaccnam": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().fn",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dn",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().cn",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		}
	]
}